apiVersion: v1
kind: Namespace
metadata:
  name: nicolas
  labels:
    app: scribo
    environment: production
---
apiVersion: v1
kind: Secret
metadata:
  name: scribo-secrets
  namespace: nicolas
  labels:
    app: scribo
    component: backend
type: Opaque
data:
  # Base64 encoded database URL (você precisará atualizar isso)
  database-url: c3FsaXRlOi8vL2RhdGEvZGF0YWJhc2UuZGI=
  # Base64 encoded JWT secret (gere um novo)
  jwt-secret: c2NyaWJvX3Byb2R1Y3Rpb25fc2VjcmV0XzIwMjQ=
  # Base64 encoded admin credentials
  admin-password: OUxmJDU7WmFnYWlh
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: scribo-config
  namespace: nicolas
  labels:
    app: scribo
    component: backend
data:
  ENVIRONMENT: "production"
  DEBUG: "false"
  CORS_ORIGINS: "https://scribo-bay.vercel.app,https://admin.scribo.saymonaraujo.dev"
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  RATE_LIMIT_ENABLED: "true"
  CACHE_ENABLED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scribo-backend
  namespace: nicolas
  labels:
    app: scribo
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: scribo
      component: backend
  template:
    metadata:
      labels:
        app: scribo
        component: backend
    spec:
      containers:
      - name: scribo-backend
        image: python:3.11-slim
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: scribo-secrets
              key: database-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: scribo-secrets
              key: jwt-secret
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: scribo-config
              key: ENVIRONMENT
        - name: DEBUG
          valueFrom:
            configMapKeyRef:
              name: scribo-config
              key: DEBUG
        - name: CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: scribo-config
              key: CORS_ORIGINS
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: scribo-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: scribo-config
              key: API_PORT
        command: ["/bin/bash"]
        args:
          - -c
          - |
            apt-get update && apt-get install -y git
            git clone https://github.com/SUPERNVX/scribo.git /app
            cd /app/backend
            pip install -r requirements.txt
            exec python -m uvicorn server:app --host 0.0.0.0 --port 8000
        resources:
          requests:
            memory: "128Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: scribo-backend-service
  namespace: nicolas
  labels:
    app: scribo
    component: backend
spec:
  selector:
    app: scribo
    component: backend
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scribo-backend-ingress
  namespace: nicolas
  labels:
    app: scribo
    component: backend
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://scribo-bay.vercel.app,https://admin.scribo.saymonaraujo.dev"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  tls:
  - hosts:
    - api.scribo.saymonaraujo.dev
    secretName: scribo-backend-tls
  rules:
  - host: api.scribo.saymonaraujo.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: scribo-backend-service
            port:
              number: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: scribo-admin-dashboard
  namespace: nicolas
  labels:
    app: scribo
    component: admin-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: scribo
      component: admin-dashboard
  template:
    metadata:
      labels:
        app: scribo
        component: admin-dashboard
    spec:
      containers:
      - name: scribo-admin
        image: python:3.11-slim
        ports:
        - containerPort: 8001
        env:
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: scribo-secrets
              key: admin-password
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: scribo-secrets
              key: database-url
        command: ["/bin/bash"]
        args:
          - -c
          - |
            apt-get update && apt-get install -y git
            git clone https://github.com/SUPERNVX/scribo.git /app
            cd /app/backend
            pip install -r requirements.txt
            python admin_dashboard.py
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /health
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: scribo-admin-service
  namespace: nicolas
  labels:
    app: scribo
    component: admin-dashboard
spec:
  selector:
    app: scribo
    component: admin-dashboard
  ports:
  - port: 8001
    targetPort: 8001
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: scribo-admin-ingress
  namespace: nicolas
  labels:
    app: scribo
    component: admin-dashboard
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: scribo-admin-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Scribo Admin'
spec:
  tls:
  - hosts:
    - admin.scribo.saymonaraujo.dev
    secretName: scribo-admin-tls
  rules:
  - host: admin.scribo.saymonaraujo.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: scribo-admin-service
            port:
              number: 8001